# Event types:

# tick - Generated by Data Handler and added to queue

# signal - Generated by strategy module. Fed through to portfolio module which calls risk.

# order - Generated by portfolio & handled by execution module

# fill - Generated by execution module & handled by portfolio


from datetime import datetime
from datetime import timedelta
import collections


class Event:
    
    def __init__(self, event_type):
        self.type = event_type
        self.time = datetime.utcnow() + timedelta(hours = 1)
        


class EventQueue:
    
    def __init__(self):
        self.queue = collections.deque()
        
    def add_to_queue(self, eventobject):
        self.queue.append(eventobject)
    
    def next_event(self):
        if self.queue:
            return self.queue.popleft()